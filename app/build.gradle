apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cesar.androidtest"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("release.keystore")
            keyAlias "release"
            storePassword "notMyRealPassword"
            keyPassword "notMyRealPassword"
        }
    }
    buildTypes {
        release {
            debuggable true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

ext {
    retrofit_version = '2.4.0'
    dagger_version = '2.24'
    picasso_version = '2.71828'
    support_version = '27.1.0'
    espresso_version = '3.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Added by Android Studio
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'
    // Snackbar
    implementation 'com.google.android.material:material:1.0.0'
    // Chrome Custom Tabs
    implementation 'androidx.browser:browser:1.0.0'

    // Tests ----------------

    // Instrumented Tests ---

    // Core
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'

    // Unit Tests -----------

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.16.0'
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'

    // Robolectric
    testImplementation "org.robolectric:robolectric:4.2.1"

    // Dagger
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-android-processor:$dagger_version"
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${variant.unitTestVariant.dirName}")
        variant.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }
}